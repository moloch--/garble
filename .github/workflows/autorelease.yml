name: Release

on:
  push:
    tags: v[1-9]+.[0-9]+.[0-9]+
    branches: master

jobs:

  linux-windows-build:
    name: Linux & Windows Build
    if: startsWith( github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:

    - name: Go 1.16
      uses: actions/setup-go@v2
      with:
        go-version: '^1.16'
    
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Compile Linux
      run: GOOS=linux GOARCH=amd64 go build -o garble_linux .

    - name: Linux Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux
        path: ./garble_linux

    - name: Compile Windows
      run: GOOS=windows GOARCH=amd64 go build -o garble_windows.exe .

    - name: Windows Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: ./garble_windows.exe

  macos-build:
    name: MacOS Build
    if: startsWith( github.ref, 'refs/tags/v')
    runs-on: macos-latest
    steps:

    - name: Go 1.16
      uses: actions/setup-go@v2
      with:
        go-version: '^1.16'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Make AMD64
      run: GOOS=darwin GOARCH=amd64 go build -o garble_macos-amd64 .
    
    - name: Make ARM64
      run: GOOS=darwin GOARCH=arm64 go build -o garble_macos-arm64 .

    - name: MacOS Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: macos
        path: ./garble_macos*

  tagged-release:

    needs: [linux-windows-build, macos-build]

    name: "Tagged Release"
    if: startsWith( github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
    - run: mkdir -p ./artifacts
    - uses: actions/download-artifact@v2
      with:
        path: ./artifacts

    - name: "Publish Release"
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          ./artifacts/*
